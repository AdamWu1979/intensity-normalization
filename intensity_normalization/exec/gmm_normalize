#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
intensity_normalization.exec.gmm_normalize

command line executable for gmm intensity normalization routine

Author: Jacob Reinhold (jacob.reinhold@jhu.edu)
Created on: May 08, 2018
"""

from __future__ import print_function, division

import argparse
import logging
import os
import sys

import numpy as np

from intensity_normalization.normalize import gmm
from intensity_normalization.utilities import io
from intensity_normalization.utilities.mask import gmm_class_mask, background_mask


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('-i', '--image', type=str, required=True)
    parser.add_argument('-m', '--mask', type=str)
    parser.add_argument('-b', '--background-mask', type=str)
    parser.add_argument('-w', '--wm-peak', default=str)
    parser.add_argument('--save-wm-peak', action='store_true', default=False)
    parser.add_argument('--find-background-mask', action='store_true', default=False)
    parser.add_argument('--norm-value', type=float, default=1000)
    parser.add_argument('--contrast', type=str, choices=['t1', 't2'], default='t1')
    parser.add_argument('--keep-bg', action='store_true', default=False)
    parser.add_argument('-v', '--verbosity', action="count",
                        help="increase output verbosity (e.g., -vv is more than -v)")
    args = parser.parse_args()
    return args


def main():
    args = parse_args()
    if args.verbosity == 1:
        level = logging.getLevelName('INFO')
    elif args.verbosity == 2:
        level = logging.getLevelName('DEBUG')
    else:
        level = logging.getLevelName('WARNING')
    logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=level)
    logger = logging.getLogger(__name__)
    try:
        img = io.open_nii(args.image)
        mask = io.open_nii(args.brain_mask)
        dirname, base, ext = io.split_filename(args.image)
        if args.find_background_mask:
            bg_mask = background_mask(img)
            bgfile = os.path.join(dirname, base + '_bgmask' + ext)
            io.save_nii(bg_mask, bgfile, is_nii=True)
        if args.wm_peak is not None:
            logger.info('Loading WM peak: ', args.wm_peak)
            peak = float(np.load(args.wm_peak))
        else:
            peak = gmm_class_mask(img, brain_mask=mask, contrast=args.contrast)
            if args.save_wm_peak:
                np.save(os.path.join(dirname, base + '_wmpeak.npy'), peak)
        normalized = gmm.gmm_normalize(img, mask, args.norm_value, args.contrast,
                                   args.background_mask, peak)
        outfile = os.path.join(dirname, base + '_norm' + ext)
        io.save_nii(normalized, outfile, is_nii=True)
        return 0
    except Exception as e:
        logger.exception(e)
        return 1


if __name__ == '__main__':
    sys.exit(main())
